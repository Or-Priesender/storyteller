// @generated by protobuf-ts 2.9.3
// @generated from protobuf file "api.proto" (package "api", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { StoryGenerator } from "./api";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GenerateStoryResponse } from "./api";
import type { GenerateStoryRequest } from "./api";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service api.StoryGenerator
 */
export interface IStoryGeneratorClient {
    /**
     * @generated from protobuf rpc: GenerateStory(api.GenerateStoryRequest) returns (api.GenerateStoryResponse);
     */
    generateStory(input: GenerateStoryRequest, options?: RpcOptions): UnaryCall<GenerateStoryRequest, GenerateStoryResponse>;
}
/**
 * @generated from protobuf service api.StoryGenerator
 */
export class StoryGeneratorClient implements IStoryGeneratorClient, ServiceInfo {
    typeName = StoryGenerator.typeName;
    methods = StoryGenerator.methods;
    options = StoryGenerator.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GenerateStory(api.GenerateStoryRequest) returns (api.GenerateStoryResponse);
     */
    generateStory(input: GenerateStoryRequest, options?: RpcOptions): UnaryCall<GenerateStoryRequest, GenerateStoryResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GenerateStoryRequest, GenerateStoryResponse>("unary", this._transport, method, opt, input);
    }
}
